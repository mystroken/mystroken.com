@use "sass:math"

/// Returns the luminance of `$color` as a float (between 0 and 1)
/// 1 is pure white, 0 is pure black
/// @param {Color} $color - Color
/// @return {Number}
/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef Reference
@function luminance($color)
  $colors: ( 'red': red($color), 'green': green($color), 'blue': blue($color) )

  @each $name, $value in $colors
    $adjusted: 0
    $value: $value / 255

    @if $value < 0.03928
      $value: $value / 12.92
    @else
      $value: ($value + .055) / 1.055
      $value: math.pow($value, 2.4)

    $colors: map-merge($colors, ($name: $value))

  @return (map-get($colors, 'red') * .2126) + (map-get($colors, 'green') * .7152) + (map-get($colors, 'blue') * .0722)

/// Returns the brightness percentage of a color
/// the value is unitless
@function brightness($color)
  $luminance: luminance($color)
  @return (1 - $luminance) * 100

// Returns a color from the hsb equation (adobe color system)
@function hsb($hue, $saturation, $brightness, $alpha: 1)
  @if $brightness == 0
    @return hsla(0, 0, 0, $alpha)
  @else
    $l-hsl: math.div($brightness, 2) * (2 - math.div($saturation, 100))
    $s-hsl: ($brightness * $saturation) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2)
    @return hsla($hue, $s-hsl, $l-hsl, $alpha)
